//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:2.0.50727.5420
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Dieser Quellcode wurde automatisch generiert von xsd, Version=2.0.50727.3038.
// 
namespace Consultingwerk.SmartComponentsDemo.OERA.Sports2000 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsCustomer")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsCustomer : global::System.Data.DataSet {
        
        private eCustomerDataTable tableeCustomer;
        
        private eSalesrepDataTable tableeSalesrep;
        
        private global::System.Data.DataRelation relationeCustomer_eSalesrep;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsCustomer() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsCustomer(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["eCustomer"] != null)) {
                    base.Tables.Add(new eCustomerDataTable(ds.Tables["eCustomer"]));
                }
                if ((ds.Tables["eSalesrep"] != null)) {
                    base.Tables.Add(new eSalesrepDataTable(ds.Tables["eSalesrep"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public eCustomerDataTable eCustomer {
            get {
                return this.tableeCustomer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public eSalesrepDataTable eSalesrep {
            get {
                return this.tableeSalesrep;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsCustomer cln = ((dsCustomer)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["eCustomer"] != null)) {
                    base.Tables.Add(new eCustomerDataTable(ds.Tables["eCustomer"]));
                }
                if ((ds.Tables["eSalesrep"] != null)) {
                    base.Tables.Add(new eSalesrepDataTable(ds.Tables["eSalesrep"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableeCustomer = ((eCustomerDataTable)(base.Tables["eCustomer"]));
            if ((initTable == true)) {
                if ((this.tableeCustomer != null)) {
                    this.tableeCustomer.InitVars();
                }
            }
            this.tableeSalesrep = ((eSalesrepDataTable)(base.Tables["eSalesrep"]));
            if ((initTable == true)) {
                if ((this.tableeSalesrep != null)) {
                    this.tableeSalesrep.InitVars();
                }
            }
            this.relationeCustomer_eSalesrep = this.Relations["eCustomer_eSalesrep"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsCustomer";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableeCustomer = new eCustomerDataTable();
            base.Tables.Add(this.tableeCustomer);
            this.tableeSalesrep = new eSalesrepDataTable();
            base.Tables.Add(this.tableeSalesrep);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("eCustomer_eSalesrep", new global::System.Data.DataColumn[] {
                        this.tableeCustomer.eCustomer_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableeSalesrep.eCustomer_IdColumn});
            this.tableeSalesrep.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationeCustomer_eSalesrep = new global::System.Data.DataRelation("eCustomer_eSalesrep", new global::System.Data.DataColumn[] {
                        this.tableeCustomer.eCustomer_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableeSalesrep.eCustomer_IdColumn}, false);
            this.relationeCustomer_eSalesrep.Nested = true;
            this.Relations.Add(this.relationeCustomer_eSalesrep);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeeCustomer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeeSalesrep() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsCustomer ds = new dsCustomer();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void eCustomerRowChangeEventHandler(object sender, eCustomerRowChangeEvent e);
        
        public delegate void eSalesrepRowChangeEventHandler(object sender, eSalesrepRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class eCustomerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCustNum;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnPostalCode;
            
            private global::System.Data.DataColumn columnContact;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnSalesRep;
            
            private global::System.Data.DataColumn columnCreditLimit;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnTerms;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnEmailAddress;
            
            private global::System.Data.DataColumn columnFlags;
            
            private global::System.Data.DataColumn columneCustomer_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eCustomerDataTable() {
                this.TableName = "eCustomer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal eCustomerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected eCustomerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustNumColumn {
                get {
                    return this.columnCustNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostalCodeColumn {
                get {
                    return this.columnPostalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactColumn {
                get {
                    return this.columnContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRepColumn {
                get {
                    return this.columnSalesRep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditLimitColumn {
                get {
                    return this.columnCreditLimit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TermsColumn {
                get {
                    return this.columnTerms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailAddressColumn {
                get {
                    return this.columnEmailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlagsColumn {
                get {
                    return this.columnFlags;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eCustomer_IdColumn {
                get {
                    return this.columneCustomer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eCustomerRow this[int index] {
                get {
                    return ((eCustomerRow)(this.Rows[index]));
                }
            }
            
            public event eCustomerRowChangeEventHandler eCustomerRowChanging;
            
            public event eCustomerRowChangeEventHandler eCustomerRowChanged;
            
            public event eCustomerRowChangeEventHandler eCustomerRowDeleting;
            
            public event eCustomerRowChangeEventHandler eCustomerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddeCustomerRow(eCustomerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eCustomerRow AddeCustomerRow(
                        int CustNum, 
                        string Country, 
                        string Name, 
                        string Address, 
                        string Address2, 
                        string City, 
                        string State, 
                        string PostalCode, 
                        string Contact, 
                        string Phone, 
                        string SalesRep, 
                        decimal CreditLimit, 
                        decimal Balance, 
                        string Terms, 
                        int Discount, 
                        string Comments, 
                        string Fax, 
                        string EmailAddress, 
                        string Flags) {
                eCustomerRow roweCustomerRow = ((eCustomerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustNum,
                        Country,
                        Name,
                        Address,
                        Address2,
                        City,
                        State,
                        PostalCode,
                        Contact,
                        Phone,
                        SalesRep,
                        CreditLimit,
                        Balance,
                        Terms,
                        Discount,
                        Comments,
                        Fax,
                        EmailAddress,
                        Flags,
                        null};
                roweCustomerRow.ItemArray = columnValuesArray;
                this.Rows.Add(roweCustomerRow);
                return roweCustomerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                eCustomerDataTable cln = ((eCustomerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new eCustomerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustNum = base.Columns["CustNum"];
                this.columnCountry = base.Columns["Country"];
                this.columnName = base.Columns["Name"];
                this.columnAddress = base.Columns["Address"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnPostalCode = base.Columns["PostalCode"];
                this.columnContact = base.Columns["Contact"];
                this.columnPhone = base.Columns["Phone"];
                this.columnSalesRep = base.Columns["SalesRep"];
                this.columnCreditLimit = base.Columns["CreditLimit"];
                this.columnBalance = base.Columns["Balance"];
                this.columnTerms = base.Columns["Terms"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnComments = base.Columns["Comments"];
                this.columnFax = base.Columns["Fax"];
                this.columnEmailAddress = base.Columns["EmailAddress"];
                this.columnFlags = base.Columns["Flags"];
                this.columneCustomer_Id = base.Columns["eCustomer_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustNum = new global::System.Data.DataColumn("CustNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustNum);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnPostalCode = new global::System.Data.DataColumn("PostalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostalCode);
                this.columnContact = new global::System.Data.DataColumn("Contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnSalesRep = new global::System.Data.DataColumn("SalesRep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRep);
                this.columnCreditLimit = new global::System.Data.DataColumn("CreditLimit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditLimit);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnTerms = new global::System.Data.DataColumn("Terms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerms);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnEmailAddress = new global::System.Data.DataColumn("EmailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmailAddress);
                this.columnFlags = new global::System.Data.DataColumn("Flags", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlags);
                this.columneCustomer_Id = new global::System.Data.DataColumn("eCustomer_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columneCustomer_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("CustNum", new global::System.Data.DataColumn[] {
                                this.columnCustNum}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columneCustomer_Id}, true));
                this.columnCustNum.Unique = true;
                this.columnCountry.DefaultValue = ((string)("USA"));
                this.columnCreditLimit.DefaultValue = ((decimal)(1500.0m));
                this.columnTerms.DefaultValue = ((string)("Net30"));
                this.columneCustomer_Id.AutoIncrement = true;
                this.columneCustomer_Id.AllowDBNull = false;
                this.columneCustomer_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eCustomerRow NeweCustomerRow() {
                return ((eCustomerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new eCustomerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(eCustomerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.eCustomerRowChanged != null)) {
                    this.eCustomerRowChanged(this, new eCustomerRowChangeEvent(((eCustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.eCustomerRowChanging != null)) {
                    this.eCustomerRowChanging(this, new eCustomerRowChangeEvent(((eCustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.eCustomerRowDeleted != null)) {
                    this.eCustomerRowDeleted(this, new eCustomerRowChangeEvent(((eCustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.eCustomerRowDeleting != null)) {
                    this.eCustomerRowDeleting(this, new eCustomerRowChangeEvent(((eCustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveeCustomerRow(eCustomerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsCustomer ds = new dsCustomer();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "eCustomerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class eSalesrepDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSalesRep;
            
            private global::System.Data.DataColumn columnRepName;
            
            private global::System.Data.DataColumn columnRegion;
            
            private global::System.Data.DataColumn columnMonthQuota01;
            
            private global::System.Data.DataColumn columnMonthQuota02;
            
            private global::System.Data.DataColumn columnMonthQuota03;
            
            private global::System.Data.DataColumn columnMonthQuota04;
            
            private global::System.Data.DataColumn columnMonthQuota05;
            
            private global::System.Data.DataColumn columnMonthQuota06;
            
            private global::System.Data.DataColumn columnMonthQuota07;
            
            private global::System.Data.DataColumn columnMonthQuota08;
            
            private global::System.Data.DataColumn columnMonthQuota09;
            
            private global::System.Data.DataColumn columnMonthQuota10;
            
            private global::System.Data.DataColumn columnMonthQuota11;
            
            private global::System.Data.DataColumn columnMonthQuota12;
            
            private global::System.Data.DataColumn columnSmallImage;
            
            private global::System.Data.DataColumn columnLargeImage;
            
            private global::System.Data.DataColumn columneCustomer_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepDataTable() {
                this.TableName = "eSalesrep";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal eSalesrepDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected eSalesrepDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRepColumn {
                get {
                    return this.columnSalesRep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RepNameColumn {
                get {
                    return this.columnRepName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota01Column {
                get {
                    return this.columnMonthQuota01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota02Column {
                get {
                    return this.columnMonthQuota02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota03Column {
                get {
                    return this.columnMonthQuota03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota04Column {
                get {
                    return this.columnMonthQuota04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota05Column {
                get {
                    return this.columnMonthQuota05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota06Column {
                get {
                    return this.columnMonthQuota06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota07Column {
                get {
                    return this.columnMonthQuota07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota08Column {
                get {
                    return this.columnMonthQuota08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota09Column {
                get {
                    return this.columnMonthQuota09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota10Column {
                get {
                    return this.columnMonthQuota10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota11Column {
                get {
                    return this.columnMonthQuota11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota12Column {
                get {
                    return this.columnMonthQuota12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SmallImageColumn {
                get {
                    return this.columnSmallImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LargeImageColumn {
                get {
                    return this.columnLargeImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eCustomer_IdColumn {
                get {
                    return this.columneCustomer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepRow this[int index] {
                get {
                    return ((eSalesrepRow)(this.Rows[index]));
                }
            }
            
            public event eSalesrepRowChangeEventHandler eSalesrepRowChanging;
            
            public event eSalesrepRowChangeEventHandler eSalesrepRowChanged;
            
            public event eSalesrepRowChangeEventHandler eSalesrepRowDeleting;
            
            public event eSalesrepRowChangeEventHandler eSalesrepRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddeSalesrepRow(eSalesrepRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepRow AddeSalesrepRow(
                        string SalesRep, 
                        string RepName, 
                        string Region, 
                        int MonthQuota01, 
                        int MonthQuota02, 
                        int MonthQuota03, 
                        int MonthQuota04, 
                        int MonthQuota05, 
                        int MonthQuota06, 
                        int MonthQuota07, 
                        int MonthQuota08, 
                        int MonthQuota09, 
                        int MonthQuota10, 
                        int MonthQuota11, 
                        int MonthQuota12, 
                        byte[] SmallImage, 
                        byte[] LargeImage, 
                        eCustomerRow parenteCustomerRowByeCustomer_eSalesrep) {
                eSalesrepRow roweSalesrepRow = ((eSalesrepRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalesRep,
                        RepName,
                        Region,
                        MonthQuota01,
                        MonthQuota02,
                        MonthQuota03,
                        MonthQuota04,
                        MonthQuota05,
                        MonthQuota06,
                        MonthQuota07,
                        MonthQuota08,
                        MonthQuota09,
                        MonthQuota10,
                        MonthQuota11,
                        MonthQuota12,
                        SmallImage,
                        LargeImage,
                        null};
                if ((parenteCustomerRowByeCustomer_eSalesrep != null)) {
                    columnValuesArray[17] = parenteCustomerRowByeCustomer_eSalesrep[19];
                }
                roweSalesrepRow.ItemArray = columnValuesArray;
                this.Rows.Add(roweSalesrepRow);
                return roweSalesrepRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                eSalesrepDataTable cln = ((eSalesrepDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new eSalesrepDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSalesRep = base.Columns["SalesRep"];
                this.columnRepName = base.Columns["RepName"];
                this.columnRegion = base.Columns["Region"];
                this.columnMonthQuota01 = base.Columns["MonthQuota01"];
                this.columnMonthQuota02 = base.Columns["MonthQuota02"];
                this.columnMonthQuota03 = base.Columns["MonthQuota03"];
                this.columnMonthQuota04 = base.Columns["MonthQuota04"];
                this.columnMonthQuota05 = base.Columns["MonthQuota05"];
                this.columnMonthQuota06 = base.Columns["MonthQuota06"];
                this.columnMonthQuota07 = base.Columns["MonthQuota07"];
                this.columnMonthQuota08 = base.Columns["MonthQuota08"];
                this.columnMonthQuota09 = base.Columns["MonthQuota09"];
                this.columnMonthQuota10 = base.Columns["MonthQuota10"];
                this.columnMonthQuota11 = base.Columns["MonthQuota11"];
                this.columnMonthQuota12 = base.Columns["MonthQuota12"];
                this.columnSmallImage = base.Columns["SmallImage"];
                this.columnLargeImage = base.Columns["LargeImage"];
                this.columneCustomer_Id = base.Columns["eCustomer_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSalesRep = new global::System.Data.DataColumn("SalesRep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRep);
                this.columnRepName = new global::System.Data.DataColumn("RepName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepName);
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnMonthQuota01 = new global::System.Data.DataColumn("MonthQuota01", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota01);
                this.columnMonthQuota02 = new global::System.Data.DataColumn("MonthQuota02", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota02);
                this.columnMonthQuota03 = new global::System.Data.DataColumn("MonthQuota03", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota03);
                this.columnMonthQuota04 = new global::System.Data.DataColumn("MonthQuota04", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota04);
                this.columnMonthQuota05 = new global::System.Data.DataColumn("MonthQuota05", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota05);
                this.columnMonthQuota06 = new global::System.Data.DataColumn("MonthQuota06", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota06);
                this.columnMonthQuota07 = new global::System.Data.DataColumn("MonthQuota07", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota07);
                this.columnMonthQuota08 = new global::System.Data.DataColumn("MonthQuota08", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota08);
                this.columnMonthQuota09 = new global::System.Data.DataColumn("MonthQuota09", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota09);
                this.columnMonthQuota10 = new global::System.Data.DataColumn("MonthQuota10", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota10);
                this.columnMonthQuota11 = new global::System.Data.DataColumn("MonthQuota11", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota11);
                this.columnMonthQuota12 = new global::System.Data.DataColumn("MonthQuota12", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota12);
                this.columnSmallImage = new global::System.Data.DataColumn("SmallImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmallImage);
                this.columnLargeImage = new global::System.Data.DataColumn("LargeImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLargeImage);
                this.columneCustomer_Id = new global::System.Data.DataColumn("eCustomer_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columneCustomer_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("SalesRep", new global::System.Data.DataColumn[] {
                                this.columnSalesRep}, false));
                this.columnSalesRep.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepRow NeweSalesrepRow() {
                return ((eSalesrepRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new eSalesrepRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(eSalesrepRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.eSalesrepRowChanged != null)) {
                    this.eSalesrepRowChanged(this, new eSalesrepRowChangeEvent(((eSalesrepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.eSalesrepRowChanging != null)) {
                    this.eSalesrepRowChanging(this, new eSalesrepRowChangeEvent(((eSalesrepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.eSalesrepRowDeleted != null)) {
                    this.eSalesrepRowDeleted(this, new eSalesrepRowChangeEvent(((eSalesrepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.eSalesrepRowDeleting != null)) {
                    this.eSalesrepRowDeleting(this, new eSalesrepRowChangeEvent(((eSalesrepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveeSalesrepRow(eSalesrepRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsCustomer ds = new dsCustomer();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "eSalesrepDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class eCustomerRow : global::System.Data.DataRow {
            
            private eCustomerDataTable tableeCustomer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal eCustomerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableeCustomer = ((eCustomerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustNum {
                get {
                    try {
                        return ((int)(this[this.tableeCustomer.CustNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte CustNum in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.CustNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Country in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Name in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Address in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Address2 in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte City in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte State in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostalCode {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.PostalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte PostalCode in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.PostalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contact {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.ContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Contact in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.ContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Phone in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesRep {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.SalesRepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SalesRep in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.SalesRepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CreditLimit {
                get {
                    try {
                        return ((decimal)(this[this.tableeCustomer.CreditLimitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte CreditLimit in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.CreditLimitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tableeCustomer.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Balance in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Terms {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.TermsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Terms in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.TermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Discount {
                get {
                    try {
                        return ((int)(this[this.tableeCustomer.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Discount in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Comments in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Fax in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmailAddress {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.EmailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EmailAddress in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.EmailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Flags {
                get {
                    try {
                        return ((string)(this[this.tableeCustomer.FlagsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Flags in Tabelle eCustomer ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeCustomer.FlagsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int eCustomer_Id {
                get {
                    return ((int)(this[this.tableeCustomer.eCustomer_IdColumn]));
                }
                set {
                    this[this.tableeCustomer.eCustomer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustNumNull() {
                return this.IsNull(this.tableeCustomer.CustNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustNumNull() {
                this[this.tableeCustomer.CustNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tableeCustomer.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tableeCustomer.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableeCustomer.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableeCustomer.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableeCustomer.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableeCustomer.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableeCustomer.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableeCustomer.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableeCustomer.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableeCustomer.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableeCustomer.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableeCustomer.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostalCodeNull() {
                return this.IsNull(this.tableeCustomer.PostalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostalCodeNull() {
                this[this.tableeCustomer.PostalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNull() {
                return this.IsNull(this.tableeCustomer.ContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNull() {
                this[this.tableeCustomer.ContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableeCustomer.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableeCustomer.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesRepNull() {
                return this.IsNull(this.tableeCustomer.SalesRepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesRepNull() {
                this[this.tableeCustomer.SalesRepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditLimitNull() {
                return this.IsNull(this.tableeCustomer.CreditLimitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditLimitNull() {
                this[this.tableeCustomer.CreditLimitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tableeCustomer.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tableeCustomer.BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTermsNull() {
                return this.IsNull(this.tableeCustomer.TermsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTermsNull() {
                this[this.tableeCustomer.TermsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableeCustomer.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableeCustomer.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableeCustomer.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableeCustomer.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tableeCustomer.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tableeCustomer.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailAddressNull() {
                return this.IsNull(this.tableeCustomer.EmailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailAddressNull() {
                this[this.tableeCustomer.EmailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlagsNull() {
                return this.IsNull(this.tableeCustomer.FlagsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlagsNull() {
                this[this.tableeCustomer.FlagsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepRow[] GeteSalesrepRows() {
                if ((this.Table.ChildRelations["eCustomer_eSalesrep"] == null)) {
                    return new eSalesrepRow[0];
                }
                else {
                    return ((eSalesrepRow[])(base.GetChildRows(this.Table.ChildRelations["eCustomer_eSalesrep"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class eSalesrepRow : global::System.Data.DataRow {
            
            private eSalesrepDataTable tableeSalesrep;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal eSalesrepRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableeSalesrep = ((eSalesrepDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesRep {
                get {
                    try {
                        return ((string)(this[this.tableeSalesrep.SalesRepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SalesRep in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.SalesRepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RepName {
                get {
                    try {
                        return ((string)(this[this.tableeSalesrep.RepNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte RepName in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.RepNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Region {
                get {
                    try {
                        return ((string)(this[this.tableeSalesrep.RegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Region in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota01 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota01 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota02 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota02 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota03 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota03 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota04 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota04 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota05 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota05 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota06 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota06 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota07 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota07 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota08 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota08 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota09 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota09 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota10 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota10 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota11 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota11 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota12 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota12 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SmallImage {
                get {
                    try {
                        return ((byte[])(this[this.tableeSalesrep.SmallImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SmallImage in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.SmallImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] LargeImage {
                get {
                    try {
                        return ((byte[])(this[this.tableeSalesrep.LargeImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte LargeImage in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.LargeImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int eCustomer_Id {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.eCustomer_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte eCustomer_Id in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.eCustomer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eCustomerRow eCustomerRow {
                get {
                    return ((eCustomerRow)(this.GetParentRow(this.Table.ParentRelations["eCustomer_eSalesrep"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["eCustomer_eSalesrep"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesRepNull() {
                return this.IsNull(this.tableeSalesrep.SalesRepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesRepNull() {
                this[this.tableeSalesrep.SalesRepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepNameNull() {
                return this.IsNull(this.tableeSalesrep.RepNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepNameNull() {
                this[this.tableeSalesrep.RepNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionNull() {
                return this.IsNull(this.tableeSalesrep.RegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionNull() {
                this[this.tableeSalesrep.RegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota01Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota01Null() {
                this[this.tableeSalesrep.MonthQuota01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota02Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota02Null() {
                this[this.tableeSalesrep.MonthQuota02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota03Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota03Null() {
                this[this.tableeSalesrep.MonthQuota03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota04Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota04Null() {
                this[this.tableeSalesrep.MonthQuota04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota05Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota05Null() {
                this[this.tableeSalesrep.MonthQuota05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota06Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota06Null() {
                this[this.tableeSalesrep.MonthQuota06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota07Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota07Null() {
                this[this.tableeSalesrep.MonthQuota07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota08Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota08Null() {
                this[this.tableeSalesrep.MonthQuota08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota09Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota09Null() {
                this[this.tableeSalesrep.MonthQuota09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota10Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota10Null() {
                this[this.tableeSalesrep.MonthQuota10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota11Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota11Null() {
                this[this.tableeSalesrep.MonthQuota11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota12Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota12Null() {
                this[this.tableeSalesrep.MonthQuota12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSmallImageNull() {
                return this.IsNull(this.tableeSalesrep.SmallImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSmallImageNull() {
                this[this.tableeSalesrep.SmallImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLargeImageNull() {
                return this.IsNull(this.tableeSalesrep.LargeImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLargeImageNull() {
                this[this.tableeSalesrep.LargeImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IseCustomer_IdNull() {
                return this.IsNull(this.tableeSalesrep.eCustomer_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeteCustomer_IdNull() {
                this[this.tableeSalesrep.eCustomer_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class eCustomerRowChangeEvent : global::System.EventArgs {
            
            private eCustomerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eCustomerRowChangeEvent(eCustomerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eCustomerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class eSalesrepRowChangeEvent : global::System.EventArgs {
            
            private eSalesrepRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepRowChangeEvent(eSalesrepRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
