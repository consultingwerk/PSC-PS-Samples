//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:2.0.50727.5420
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Dieser Quellcode wurde automatisch generiert von xsd, Version=2.0.50727.3038.
// 
namespace Consultingwerk.SmartComponentsDemo.OERA.Sports2000 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsSalesRep")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsSalesRep : global::System.Data.DataSet {
        
        private eSalesrepDataTable tableeSalesrep;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsSalesRep() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsSalesRep(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["eSalesrep"] != null)) {
                    base.Tables.Add(new eSalesrepDataTable(ds.Tables["eSalesrep"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public eSalesrepDataTable eSalesrep {
            get {
                return this.tableeSalesrep;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsSalesRep cln = ((dsSalesRep)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["eSalesrep"] != null)) {
                    base.Tables.Add(new eSalesrepDataTable(ds.Tables["eSalesrep"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableeSalesrep = ((eSalesrepDataTable)(base.Tables["eSalesrep"]));
            if ((initTable == true)) {
                if ((this.tableeSalesrep != null)) {
                    this.tableeSalesrep.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsSalesRep";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableeSalesrep = new eSalesrepDataTable();
            base.Tables.Add(this.tableeSalesrep);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeeSalesrep() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsSalesRep ds = new dsSalesRep();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void eSalesrepRowChangeEventHandler(object sender, eSalesrepRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class eSalesrepDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSalesRep;
            
            private global::System.Data.DataColumn columnRepName;
            
            private global::System.Data.DataColumn columnRegion;
            
            private global::System.Data.DataColumn columnMonthQuota01;
            
            private global::System.Data.DataColumn columnMonthQuota02;
            
            private global::System.Data.DataColumn columnMonthQuota03;
            
            private global::System.Data.DataColumn columnMonthQuota04;
            
            private global::System.Data.DataColumn columnMonthQuota05;
            
            private global::System.Data.DataColumn columnMonthQuota06;
            
            private global::System.Data.DataColumn columnMonthQuota07;
            
            private global::System.Data.DataColumn columnMonthQuota08;
            
            private global::System.Data.DataColumn columnMonthQuota09;
            
            private global::System.Data.DataColumn columnMonthQuota10;
            
            private global::System.Data.DataColumn columnMonthQuota11;
            
            private global::System.Data.DataColumn columnMonthQuota12;
            
            private global::System.Data.DataColumn columnSmallImage;
            
            private global::System.Data.DataColumn columnLargeImage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepDataTable() {
                this.TableName = "eSalesrep";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal eSalesrepDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected eSalesrepDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRepColumn {
                get {
                    return this.columnSalesRep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RepNameColumn {
                get {
                    return this.columnRepName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota01Column {
                get {
                    return this.columnMonthQuota01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota02Column {
                get {
                    return this.columnMonthQuota02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota03Column {
                get {
                    return this.columnMonthQuota03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota04Column {
                get {
                    return this.columnMonthQuota04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota05Column {
                get {
                    return this.columnMonthQuota05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota06Column {
                get {
                    return this.columnMonthQuota06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota07Column {
                get {
                    return this.columnMonthQuota07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota08Column {
                get {
                    return this.columnMonthQuota08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota09Column {
                get {
                    return this.columnMonthQuota09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota10Column {
                get {
                    return this.columnMonthQuota10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota11Column {
                get {
                    return this.columnMonthQuota11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthQuota12Column {
                get {
                    return this.columnMonthQuota12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SmallImageColumn {
                get {
                    return this.columnSmallImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LargeImageColumn {
                get {
                    return this.columnLargeImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepRow this[int index] {
                get {
                    return ((eSalesrepRow)(this.Rows[index]));
                }
            }
            
            public event eSalesrepRowChangeEventHandler eSalesrepRowChanging;
            
            public event eSalesrepRowChangeEventHandler eSalesrepRowChanged;
            
            public event eSalesrepRowChangeEventHandler eSalesrepRowDeleting;
            
            public event eSalesrepRowChangeEventHandler eSalesrepRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddeSalesrepRow(eSalesrepRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepRow AddeSalesrepRow(
                        string SalesRep, 
                        string RepName, 
                        string Region, 
                        int MonthQuota01, 
                        int MonthQuota02, 
                        int MonthQuota03, 
                        int MonthQuota04, 
                        int MonthQuota05, 
                        int MonthQuota06, 
                        int MonthQuota07, 
                        int MonthQuota08, 
                        int MonthQuota09, 
                        int MonthQuota10, 
                        int MonthQuota11, 
                        int MonthQuota12, 
                        byte[] SmallImage, 
                        byte[] LargeImage) {
                eSalesrepRow roweSalesrepRow = ((eSalesrepRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalesRep,
                        RepName,
                        Region,
                        MonthQuota01,
                        MonthQuota02,
                        MonthQuota03,
                        MonthQuota04,
                        MonthQuota05,
                        MonthQuota06,
                        MonthQuota07,
                        MonthQuota08,
                        MonthQuota09,
                        MonthQuota10,
                        MonthQuota11,
                        MonthQuota12,
                        SmallImage,
                        LargeImage};
                roweSalesrepRow.ItemArray = columnValuesArray;
                this.Rows.Add(roweSalesrepRow);
                return roweSalesrepRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                eSalesrepDataTable cln = ((eSalesrepDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new eSalesrepDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSalesRep = base.Columns["SalesRep"];
                this.columnRepName = base.Columns["RepName"];
                this.columnRegion = base.Columns["Region"];
                this.columnMonthQuota01 = base.Columns["MonthQuota01"];
                this.columnMonthQuota02 = base.Columns["MonthQuota02"];
                this.columnMonthQuota03 = base.Columns["MonthQuota03"];
                this.columnMonthQuota04 = base.Columns["MonthQuota04"];
                this.columnMonthQuota05 = base.Columns["MonthQuota05"];
                this.columnMonthQuota06 = base.Columns["MonthQuota06"];
                this.columnMonthQuota07 = base.Columns["MonthQuota07"];
                this.columnMonthQuota08 = base.Columns["MonthQuota08"];
                this.columnMonthQuota09 = base.Columns["MonthQuota09"];
                this.columnMonthQuota10 = base.Columns["MonthQuota10"];
                this.columnMonthQuota11 = base.Columns["MonthQuota11"];
                this.columnMonthQuota12 = base.Columns["MonthQuota12"];
                this.columnSmallImage = base.Columns["SmallImage"];
                this.columnLargeImage = base.Columns["LargeImage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSalesRep = new global::System.Data.DataColumn("SalesRep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRep);
                this.columnRepName = new global::System.Data.DataColumn("RepName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepName);
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnMonthQuota01 = new global::System.Data.DataColumn("MonthQuota01", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota01);
                this.columnMonthQuota02 = new global::System.Data.DataColumn("MonthQuota02", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota02);
                this.columnMonthQuota03 = new global::System.Data.DataColumn("MonthQuota03", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota03);
                this.columnMonthQuota04 = new global::System.Data.DataColumn("MonthQuota04", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota04);
                this.columnMonthQuota05 = new global::System.Data.DataColumn("MonthQuota05", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota05);
                this.columnMonthQuota06 = new global::System.Data.DataColumn("MonthQuota06", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota06);
                this.columnMonthQuota07 = new global::System.Data.DataColumn("MonthQuota07", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota07);
                this.columnMonthQuota08 = new global::System.Data.DataColumn("MonthQuota08", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota08);
                this.columnMonthQuota09 = new global::System.Data.DataColumn("MonthQuota09", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota09);
                this.columnMonthQuota10 = new global::System.Data.DataColumn("MonthQuota10", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota10);
                this.columnMonthQuota11 = new global::System.Data.DataColumn("MonthQuota11", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota11);
                this.columnMonthQuota12 = new global::System.Data.DataColumn("MonthQuota12", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthQuota12);
                this.columnSmallImage = new global::System.Data.DataColumn("SmallImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmallImage);
                this.columnLargeImage = new global::System.Data.DataColumn("LargeImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLargeImage);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("SalesRep", new global::System.Data.DataColumn[] {
                                this.columnSalesRep}, false));
                this.columnSalesRep.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepRow NeweSalesrepRow() {
                return ((eSalesrepRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new eSalesrepRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(eSalesrepRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.eSalesrepRowChanged != null)) {
                    this.eSalesrepRowChanged(this, new eSalesrepRowChangeEvent(((eSalesrepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.eSalesrepRowChanging != null)) {
                    this.eSalesrepRowChanging(this, new eSalesrepRowChangeEvent(((eSalesrepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.eSalesrepRowDeleted != null)) {
                    this.eSalesrepRowDeleted(this, new eSalesrepRowChangeEvent(((eSalesrepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.eSalesrepRowDeleting != null)) {
                    this.eSalesrepRowDeleting(this, new eSalesrepRowChangeEvent(((eSalesrepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveeSalesrepRow(eSalesrepRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSalesRep ds = new dsSalesRep();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "eSalesrepDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class eSalesrepRow : global::System.Data.DataRow {
            
            private eSalesrepDataTable tableeSalesrep;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal eSalesrepRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableeSalesrep = ((eSalesrepDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesRep {
                get {
                    try {
                        return ((string)(this[this.tableeSalesrep.SalesRepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SalesRep in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.SalesRepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RepName {
                get {
                    try {
                        return ((string)(this[this.tableeSalesrep.RepNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte RepName in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.RepNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Region {
                get {
                    try {
                        return ((string)(this[this.tableeSalesrep.RegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Region in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota01 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota01 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota02 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota02 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota03 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota03 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota04 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota04 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota05 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota05 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota06 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota06 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota07 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota07 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota08 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota08 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota09 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota09 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota10 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota10 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota11 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota11 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MonthQuota12 {
                get {
                    try {
                        return ((int)(this[this.tableeSalesrep.MonthQuota12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte MonthQuota12 in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.MonthQuota12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SmallImage {
                get {
                    try {
                        return ((byte[])(this[this.tableeSalesrep.SmallImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SmallImage in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.SmallImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] LargeImage {
                get {
                    try {
                        return ((byte[])(this[this.tableeSalesrep.LargeImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte LargeImage in Tabelle eSalesrep ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableeSalesrep.LargeImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesRepNull() {
                return this.IsNull(this.tableeSalesrep.SalesRepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesRepNull() {
                this[this.tableeSalesrep.SalesRepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepNameNull() {
                return this.IsNull(this.tableeSalesrep.RepNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepNameNull() {
                this[this.tableeSalesrep.RepNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionNull() {
                return this.IsNull(this.tableeSalesrep.RegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionNull() {
                this[this.tableeSalesrep.RegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota01Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota01Null() {
                this[this.tableeSalesrep.MonthQuota01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota02Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota02Null() {
                this[this.tableeSalesrep.MonthQuota02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota03Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota03Null() {
                this[this.tableeSalesrep.MonthQuota03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota04Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota04Null() {
                this[this.tableeSalesrep.MonthQuota04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota05Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota05Null() {
                this[this.tableeSalesrep.MonthQuota05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota06Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota06Null() {
                this[this.tableeSalesrep.MonthQuota06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota07Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota07Null() {
                this[this.tableeSalesrep.MonthQuota07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota08Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota08Null() {
                this[this.tableeSalesrep.MonthQuota08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota09Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota09Null() {
                this[this.tableeSalesrep.MonthQuota09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota10Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota10Null() {
                this[this.tableeSalesrep.MonthQuota10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota11Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota11Null() {
                this[this.tableeSalesrep.MonthQuota11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthQuota12Null() {
                return this.IsNull(this.tableeSalesrep.MonthQuota12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthQuota12Null() {
                this[this.tableeSalesrep.MonthQuota12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSmallImageNull() {
                return this.IsNull(this.tableeSalesrep.SmallImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSmallImageNull() {
                this[this.tableeSalesrep.SmallImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLargeImageNull() {
                return this.IsNull(this.tableeSalesrep.LargeImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLargeImageNull() {
                this[this.tableeSalesrep.LargeImageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class eSalesrepRowChangeEvent : global::System.EventArgs {
            
            private eSalesrepRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepRowChangeEvent(eSalesrepRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public eSalesrepRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
